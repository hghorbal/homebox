<?php

// CTools API requirements
define('HOMEBOX_MINIMUM_CTOOLS_API_VERSION', '1.2');

/**
 * Testing part
 */
homebox_include('HomeboxPage.class');
homebox_include('HomeboxTab.class');
homebox_include('HomeboxBox.class');
homebox_include('handler.block');

drupal_add_js(drupal_get_path('module', 'homebox') .'/homebox.js');
drupal_add_js(drupal_get_path('module', 'homebox') .'/jquery.masonry.min.js');
// Includes revelant files

/**
 * Implementation of hook_requirements()
 * 
 * We need CTools API 1.2 (TODO: sure?)
 */
function homebox_requirements($phase) {
  $requirements = array();
  if (!module_invoke('ctools', 'api_version', HOMEBOX_MINIMUM_CTOOLS_API_VERSION)) {
     $requirements['homebox_ctools'] = array(
       'title' => $t('Homebox requires Chaos Tool Suite (CTools) API Version'),
       'value' => t('At least @api', array('@api' => HOMEBOX_MINIMUM_CTOOLS_API_VERSION)),
       'severity' => REQUIREMENT_ERROR,
     );
  }
  return $requirements;
}

function homebox_menu() {
  $items = array();

  $items['homebox'] = array(
    'title' => t('Homebox'),
    'page callback' => 'homebox_render_page',
    'access arguments' => array(TRUE),
    'type' => MENU_NORMAL_ITEM,
  );
  
  $items['homebox/content/%'] = array(
    'page callback' => 'homebox_load_content',
    'access arguments' => array(TRUE),
    'type' => MENU_CALLBACK,
  );
  
  $items['homebox/loadboxes'] = array(
    'page callback' => 'homebox_modal_test',
    'access arguments' => array(TRUE),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function homebox_modal_test() {
  ctools_include('ajax');
  ctools_modal_add_js();
  
  // $output[] = ctools_modal_command_display("Title", "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.");
  //$output[] = ctools_ajax_command_replace('#modal-message', '<div id="modal-message">Hello Dolly</div>');
  $boxes = array();
  foreach (module_implements('declare_boxes') as $module) {
    $declared_boxes = module_invoke($module, 'declare_boxes');
    $boxes = array_merge($boxes, $declared_boxes);
  }
  
  foreach ($boxes as $key => $box) {
    //print_r($box);
    $html = theme('homebox_box', $box);
    $output[] = ctools_ajax_command_append('#homebox', $html);
  }
  
  ctools_ajax_render($output);
}

function homebox_load_content($identifer = NULL) {
  ctools_include('ajax');
  
  
  $identifer = arg(2);
  list($module, $name) = explode(':', $identifer);
  
  $box = new HomeboxBox($module, $name, TRUE);
  $html = theme('homebox_box', $box);
  $output[] = ctools_ajax_command_append('#homebox', $html);
  ctools_ajax_render($output);
}

function homebox_render_page() {
  ctools_include('ajax');
  ctools_include('modal');
  ctools_include('plugins');
  ctools_modal_add_js();

  $boxes = array();
  foreach (module_implements('declare_boxes') as $module) {
    $declared_boxes = module_invoke($module, 'declare_boxes');
    $boxes = array_merge($boxes, $declared_boxes);
  }

  //print_r($boxes);
  $identifiers = array();
  foreach ($boxes as $key => $box) {
    $identifiers[] = $box->getIdentifier();
  }

  $tab1 = new HomeboxTab('First tab');
  $tab2 = new HomeboxTab('Second tab');

  $tabs_name = array($tab1->getName(), $tab2->getName());
  
  $tabs = array($tab1, $tab2);
  
  drupal_add_js(array('homebox' => array('tabs' => $tabs_name)), $type = 'setting');

  // ctools_ajax_command_settings(array('homebox' => $identifiers));
  drupal_add_js(array('homebox' => array('boxes' => $identifiers)), $type = 'setting');
  return theme('homebox_page', $tabs);
  
  // $box = new HomeboxBox('homebox', 'recent_comments');
  // $box->setTitle(t('Recent comments'));
  // $box->setDescription(t('Shows recent comments posted on the site'));
  // $box->setContent('<div><h3>Recent comments</h3><ul><li>1 comment</li></ul></div>');
  // 
  // $tab = new HomeboxTab('My new tab');
  // $tab->addBox($box);
  // $tab->addBox($box);
  // 
  // $page = new HomeboxPage('My Homebox page');
  // $page->addTab($tab);
  // $page->addTab($tab);

}



/**
 * Loads one box from the database
 * 
 * @param $id
 * @param $parts
 *  Indicates which parts of the box should be loaded:
 *    'all', the whole box is loaded (default)
 *    'name', loads only box name/title
 *    'config', loads configuration zone, this includes Views exposed filters as well
 *    'content', only loads box content
 * Of course you can load multiple parts at once as $parts is an array.
 * You can even define your own 'parts' within your module be implementing:
 * @code
 * hook_homebox_define_parts()
 * @endcode
 * Which should return an array of parts name, i.e:
 * @code
 * array('my_custom_box_part', 'another_custom_box_part')
 */
function homebox_load_box($id, $parts = array('all')) {
}

/**
 * Finds every available boxes parts defined in 3rd party module
 * 
 * @param $sort
 *  As seen in module_implements()
 * @param $refresh
 *  As seen in module_implements()
 * @return Array keyed by module name
 *  Containing parts implemented by each modules
 */
function homebox_parts_implements($sort = FALSE, $refresh = FALSE) {
  // TODO: why not use module_invoke_all
  foreach (module_implements('homebox_define_parts', $sort, $refresh) as $module) {
    $parts[$module] = module_invoke($module, 'homebox_define_parts');
  }
}

function homebox_homebox_define_parts() {
  return array('name', 'config', 'content');
}

/**
 * Implementation of hook_theme().
 */
function homebox_theme() {
  return array(
    // Set hook name: see template_preprocess_homebox()
    'homebox_page' => array(
      'arguments' => array('tabs' => $tabs),
      'template' => 'homebox-page', // Set template to homebox-page.tpl.php
    ),
    'homebox_box' => array(
      'arguments' => array('box' => $box),
      'template' => 'homebox-box', // Set template to homebox-box.tpl.php
    ),
  );
}

/**
 * Include homebox .inc files as necessary.
 */
function homebox_include($file) {
  static $used = array();
  if (!isset($used[$file])) {
    require_once './' . drupal_get_path('module', 'homebox') . "/includes/$file.inc";
  }

  $used[$file] = TRUE;
}


/**
 * Implementation of hook_ctools_plugin_directory().
 *
 * It simply tells CTools where to find the .inc files that define various
 * args, contexts, content_types.
 */
// function homebox_ctools_plugin_directory($module, $plugin) {
//   if ($module == 'homebox' && !empty($plugin)) {
//     return "plugins/$plugin";
//   }
// }

// TODO
// function homebox_get_ctools_plugins() {
//   ctools_include('plugins');
//   ctools_get_plugins('homebox', 'homebox_boxes');
// }

function homebox_recent_comments_set_box_content($text) {
  return $text;
}

/***

Dans le template identifier une box unique comme ceci:

"{$module}::{$name}::{$uid}::{$delta}::{$tab}" avec en primary key $uid + $delta
$tab == my-tab => My Tab

*/